# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rengars_marketplace.models.Model import Model
from rengars_marketplace import util


class UpdateJobOfferDto(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, company_name: str = None, position_name: str = None, description: str = None):  # noqa: E501
        """UpdateJobOfferDto - a model defined in Swagger

        :param company_name: The company_name of this UpdateJobOfferDto.  # noqa: E501
        :type company_name: str
        :param position_name: The position_name of this UpdateJobOfferDto.  # noqa: E501
        :type position_name: str
        :param description: The description of this UpdateJobOfferDto.  # noqa: E501
        :type description: str
        """
        self.swagger_types = {
            'company_name': str,
            'position_name': str,
            'description': str
        }

        self.attribute_map = {
            'company_name': 'companyName',
            'position_name': 'positionName',
            'description': 'description'
        }
        self._company_name = company_name
        self._position_name = position_name
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateJobOfferDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateJobOfferDto of this UpdateJobOfferDto.  # noqa: E501
        :rtype: UpdateJobOfferDto
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self) -> str:
        """Gets the company_name of this UpdateJobOfferDto.


        :return: The company_name of this UpdateJobOfferDto.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name: str):
        """Sets the company_name of this UpdateJobOfferDto.


        :param company_name: The company_name of this UpdateJobOfferDto.
        :type company_name: str
        """
        if company_name is None:
            raise ValueError("Invalid value for `company_name`, must not be `None`")  # noqa: E501

        self._company_name = company_name

    @property
    def position_name(self) -> str:
        """Gets the position_name of this UpdateJobOfferDto.


        :return: The position_name of this UpdateJobOfferDto.
        :rtype: str
        """
        return self._position_name

    @position_name.setter
    def position_name(self, position_name: str):
        """Sets the position_name of this UpdateJobOfferDto.


        :param position_name: The position_name of this UpdateJobOfferDto.
        :type position_name: str
        """
        if position_name is None:
            raise ValueError("Invalid value for `position_name`, must not be `None`")  # noqa: E501

        self._position_name = position_name

    @property
    def description(self) -> str:
        """Gets the description of this UpdateJobOfferDto.


        :return: The description of this UpdateJobOfferDto.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this UpdateJobOfferDto.


        :param description: The description of this UpdateJobOfferDto.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description
